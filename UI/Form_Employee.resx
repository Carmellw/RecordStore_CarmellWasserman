<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>